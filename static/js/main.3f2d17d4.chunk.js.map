{"version":3,"sources":["Infinity.svg","CreateBox.js","App.js","index.js"],"names":["CreateBox","address","createBox","React","useState","selectedTokens","setSelectedTokens","tokens","setTokens","price","setPrice","creatingBox","setCreatingBox","useEffect","axios","get","response","console","log","data","getTokens","style","border","padding","textAlign","display","overflowY","paddingBlock","margin","map","token","index","balance","Button","minWidth","maxWidth","maxHeight","onClick","found","i","length","contract","tokenId","slice","concat","metadata","displayUri","width","alt","name","src","replace","id","justifyContent","TextField","label","variant","value","onChange","event","target","mutez","parseFloat","wrappedTokens","forEach","push","cAddress","amount","loading","height","Tezos","TezosToolkit","wallet","BeaconWallet","preferredNetwork","NetworkType","CUSTOM","contractAddress","setWalletProvider","App","activeAccount","setActiveAccount","boxes","setBoxes","tab","setTab","openingBox","setOpeningBox","sync","client","requestPermissions","network","type","rpcUrl","permissions","getActiveAccount","unsync","clearActiveAccount","getAcc","reverse","j","getBoxes","at","list","tContract","kind","OpKind","TRANSACTION","methods","update_operators","add_operator","operator","token_id","owner","toTransferParams","storageLimit","remove_operator","batch","send","operation","confirmation","result","storage","resultas","toast","fullWidth","fontSize","marginTop","box","active","marginBlock","key","title","openBox","newBoxes","splice","href","mint_ZONK","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f2d17d4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Infinity.42a85c88.svg\";","import React, { useEffect } from 'react';\nimport { Button, TextField } from \"@material-ui/core\";\nimport axios from 'axios';\nimport loading from './Infinity.svg';\n\nfunction CreateBox({ address, createBox }) {\n    const [selectedTokens, setSelectedTokens] = React.useState([]);\n    const [tokens, setTokens] = React.useState([]);\n    const [price, setPrice] = React.useState(\"\");\n    const [creatingBox, setCreatingBox] = React.useState(false);\n\n    useEffect(() => {\n        console.log(address)\n\n        //get tokens \n        async function getTokens() {\n            const response = await axios.get(\n                `https://api.ghostnet.tzkt.io/v1/tokens/balances?account=${address}&&balance.ne=0`\n            );\n            console.log(response)\n            console.log(response.data)\n            if (response.data) {\n                setTokens(response.data)\n            }\n        }\n        getTokens();\n    }, [address]);\n\n    return (\n        <div>\n            <div style={{ border: \"5px solid green\", padding: 3 }}>\n                <div style={{ textAlign: \"center\" }}>\n                    select tokens you want to sell and fill the box\n                </div>\n                <div style={{ display: \"flex\", overflowY: \"auto\", paddingBlock: 10, margin: 10 }}>\n                    {\n                        selectedTokens && selectedTokens.map((token, index) => (\n                            token.balance > 0 &&\n                            <Button key={token.id} style={{ border: \"2px solid black\", minWidth: \"17.4vw\", maxWidth: \"17.4vw\", maxHeight: \"17.4vw\" }}\n                                onClick={() => {\n                                    let found = false;\n\n                                    for (let i = 0; i < tokens.length; i++) {\n                                        if (tokens[i].token.contract.address === token.token.contract.address && tokens[i].token.tokenId === token.token.tokenId) {\n                                            setTokens(\n                                                [\n                                                    ...tokens.slice(0, i),\n                                                    {\n                                                        ...token,\n                                                        balance: tokens[i].balance + 1,\n                                                    },\n                                                    ...tokens.slice(i + 1)\n                                                ]\n                                            );\n                                            found = true;\n                                        }\n                                    }\n\n                                    if (!found) {\n                                        setTokens(tokens.concat([{ ...token, balance: 1 }]))\n                                    }\n\n                                    setSelectedTokens(\n                                        [\n                                            ...selectedTokens.slice(0, index),\n                                            {\n                                                ...token,\n                                                balance: token.balance - 1,\n                                            },\n                                            ...selectedTokens.slice(index + 1)\n                                        ]\n                                    )\n                                }}\n                            >\n                                <div>\n                                    {token.token.metadata.displayUri && <img style={{ width: \"90%\", maxHeight: \"15.5vw\" }} alt={token.token.metadata.name} src={token.token.metadata.displayUri.replace('ipfs://', 'https://ipfs.io/ipfs/')}></img>}\n                                    <div style={{ textAlign: \"center\" }}>\n                                        {(token.token && token.token.metadata) && token.token.metadata.name.length > 30 ? token.token.metadata.name.slice(4, 27) + \"...\" : token.token.metadata.name}({token.balance})\n                                    </div>\n                                </div>\n                            </Button>\n\n                        ))\n                    }\n                </div>\n\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n\n                    <TextField\n                        label=\"Enter price\"\n                        variant=\"outlined\"\n                        value={price}\n                        onChange={\n                            (event) => {\n                                setPrice(event.target.value);\n                            }\n                        }\n                    >\n                    </TextField>\n\n                    <Button\n                        style={{\n                            border: \"1px solid black\",\n                            margin: 5\n                        }}\n                        onClick={async () => {\n                            setCreatingBox(true)\n                            console.log(\"price\")\n                            console.log(price)\n\n                            console.log(\"mutez\")\n                            let mutez = parseFloat(price) * 1000000;\n                            console.log(mutez)\n\n                            let wrappedTokens = [];\n                            selectedTokens.forEach(token => {\n                                wrappedTokens.push(\n                                    {\n                                        cAddress: token.token.contract.address,\n                                        tokenId: token.token.tokenId,\n                                        amount: token.balance\n                                    }\n                                )\n                            });\n\n                            console.log(wrappedTokens)\n\n                            await createBox(\n                                mutez,\n                                wrappedTokens\n                            );\n                            setSelectedTokens([]);\n                            setPrice(\"\");\n                            setCreatingBox(false)\n                        }}\n                    >\n                        {creatingBox ? <img alt={\"loading\"} src={loading} style={{ height: 24.5 }}></img> : \"create box\"}\n                    </Button>\n                </div>\n            </div>\n            <br></br>\n            <br></br>\n            <br></br>\n            <div style={{ border: \"3px solid darkblue\" }}>\n                {\n                    tokens && tokens.map((token, index) => (\n                        token.balance > 0 &&\n                        <Button\n                            key={token.id}\n                            style={{ border: \"2px solid black\", width: \"17.4vw\", height: \"17.4vw\" }}\n                            onClick={() => {\n                                let found = false;\n\n                                for (let i = 0; i < selectedTokens.length; i++) {\n                                    if (selectedTokens[i].token.contract.address === token.token.contract.address && selectedTokens[i].token.tokenId === token.token.tokenId) {\n                                        setSelectedTokens(\n                                            [\n                                                ...selectedTokens.slice(0, i),\n                                                {\n                                                    ...token,\n                                                    balance: selectedTokens[i].balance + 1,\n                                                },\n                                                ...selectedTokens.slice(i + 1)\n                                            ]\n                                        );\n                                        found = true;\n                                    }\n                                }\n\n                                if (!found) {\n                                    setSelectedTokens(selectedTokens.concat([{ ...token, balance: 1 }]))\n                                }\n\n                                setTokens(\n                                    [\n                                        ...tokens.slice(0, index),\n                                        {\n                                            ...token,\n                                            balance: token.balance - 1,\n                                        },\n                                        ...tokens.slice(index + 1)\n                                    ]\n                                )\n                            }}\n                        >\n                            <div>\n                                {token.token && token.token.metadata && token.token.metadata.displayUri && <img alt={token.token.metadata.name} style={{ width: \"90%\", maxHeight: \"15.5vw\" }} src={token.token.metadata.displayUri.replace('ipfs://', 'https://ipfs.io/ipfs/')}></img>}\n                                <div style={{ textAlign: \"center\" }}>\n                                    {token.token && token.token.metadata && (token.token.metadata.name.length > 30 ? token.token.metadata.name.slice(4, 27) + \"...\" : token.token.metadata.name)}({token.balance})\n                                </div>\n                            </div>\n                        </Button>\n\n                    ))\n                }\n            </div>\n        </div >\n    );\n}\n\nexport default CreateBox;","import './App.css';\nimport { TezosToolkit, OpKind } from \"@taquito/taquito\";\nimport { BeaconWallet } from \"@taquito/beacon-wallet\";\nimport { NetworkType } from \"@airgap/beacon-sdk\";\nimport React, { useState, useEffect } from 'react';\nimport { Button } from \"@material-ui/core\";\nimport axios from 'axios';\nimport CreateBox from './CreateBox.js';\nimport toast, { Toaster } from 'react-hot-toast';\nimport loading from './Infinity.svg';\n\nconst Tezos = new TezosToolkit(\"https://rpc.ghostnet.teztnets.xyz\");\nconst wallet = new BeaconWallet({ name: \"Tezos Secrets\", preferredNetwork: NetworkType.CUSTOM });\nconst contractAddress = \"KT1Tmo6GTcPztKxGxCRP6ptdHVjgH6kL1pTj\";\n\nTezos.setWalletProvider(wallet);\n\nfunction App() {\n  const [activeAccount, setActiveAccount] = useState();\n\n  const [boxes, setBoxes] = React.useState([]);\n  const [tab, setTab] = React.useState(0);\n  const [openingBox, setOpeningBox] = React.useState(false);\n\n\n  useEffect(() => {\n    async function getAcc() {\n\n      if (activeAccount) {\n        //console.log(activeAccount.address)\n      } else {\n        console.log(\" trying to get active acc\")\n        setActiveAccount(await wallet.client.getActiveAccount());\n      }\n    }\n    getAcc();\n  }, [activeAccount]);\n\n  useEffect(() => {\n    async function getBoxes() {\n      const response = await axios.get(\n        `https://api.ghostnet.tzkt.io/v1/contracts/${contractAddress}/bigmaps/boxes/keys`\n      );\n      let boxes = response.data.reverse();\n      console.log(boxes)\n\n\n\n      for (let i = 0; i < response.data.length; i++) {\n        for (let j = 0; j < response.data[i].value.tokens.length; j++) {\n          let token = await axios.get(\n            `https://api.ghostnet.tzkt.io/v1/tokens?contract=${response.data[i].value.tokens[j].cAddress}&&tokenId=${response.data[i].value.tokens[j].tokenId}`\n          );\n          console.log(token.data[0].metadata)\n\n          boxes[i].value.tokens[j].metadata = token.data[0].metadata;\n\n        }\n      }\n      console.log(boxes)\n\n      setBoxes(boxes)\n    }\n    getBoxes();\n  }, []);\n\n\n\n  useEffect(() => {\n    async function getTokens() {\n      const response = await axios.get(\n        `https://api.ghostnet.tzkt.io/v1/tokens/balances?account=tz1TCyS6Gp2JQo1XoSU2WMjqyjMz6iRdn8fD&&balance.ne=0`\n      );\n      console.log(response)\n      console.log(response.data)\n\n    }\n\n    getTokens();\n  }, []);\n\n  async function sync() {\n    try {\n      const permissions = await wallet.client.requestPermissions({\n        network: {\n          type: NetworkType.CUSTOM,\n          name: \"Ghostnet\",\n          rpcUrl: \"https://rpc.ghostnet.teztnets.xyz\",\n        },\n      });\n      console.log(\"Got permissions:\", permissions.address);\n      setActiveAccount(await wallet.client.getActiveAccount());\n    } catch (error) {\n      console.log(\"Got error:\", error);\n    }\n  }\n\n  async function unsync() {\n    await wallet.clearActiveAccount();\n    setActiveAccount(await wallet.client.getActiveAccount());\n  }\n\n\n  const createBox = async (price, tokens) => {\n\n    const contract = await Tezos.wallet.at(contractAddress);\n    console.log(price)\n    console.log(tokens)\n\n    let list = [];\n\n    // add operators\n    for (let i = 0; i < tokens.length; i++) {\n      let tContract = await Tezos.wallet.at(tokens[i].cAddress);\n      list.push(\n        {\n          kind: OpKind.TRANSACTION,\n          ...tContract.methods.update_operators([{ add_operator: { operator: contractAddress, token_id: tokens[i].tokenId, owner: activeAccount.address } }])\n            .toTransferParams({ amount: 0, mutez: true, storageLimit: 175 })\n        }\n      )\n    }\n    // ready to contract call\n    list.push(\n      {\n        kind: OpKind.TRANSACTION,\n        ...contract.methods.createBox(price, tokens).toTransferParams({ amount: 0, mutez: true })\n      }\n    )\n    // remove operators\n    for (let i = 0; i < tokens.length; i++) {\n      let tContract = await Tezos.wallet.at(tokens[i].cAddress);\n      list.push(\n        {\n          kind: OpKind.TRANSACTION,\n          ...tContract.methods.update_operators([{ remove_operator: { operator: contractAddress, token_id: tokens[i].tokenId, owner: activeAccount.address } }])\n            .toTransferParams({ amount: 0, mutez: true, storageLimit: 175 })\n        },\n      )\n    }\n\n    console.log(list)\n\n    try {\n      let batch = await Tezos.wallet.batch(list);\n      const operation = await batch.send({ mutez: true, amount: price })\n\n      const result = await operation.confirmation();\n      const resultas = await contract.storage();\n      console.log(result);\n      console.log(resultas);\n      toast('New box successfully created !')\n\n    } catch (error) {\n      console.log(error);\n      toast('something unexpected happened, more details in console')\n    }\n  };\n\n  return (\n    <div>\n      <Toaster />\n      <div style={{ display: \"flex\" }}>\n        <Button\n          style={{\n            border: \"3px solid black\",\n            margin: 5\n          }}\n          fullWidth\n          onClick={async () => {\n            setTab(0)\n          }}\n        >\n          EXPLORE\n        </Button>\n\n        <Button\n          style={{\n            border: \"3px solid black\",\n            margin: 5\n          }}\n          fullWidth\n          onClick={async () => {\n            setTab(1)\n          }}\n        >\n          Create Box\n        </Button>\n\n\n        <Button\n          style={{\n            border: \"3px solid black\",\n            margin: 5\n          }}\n          fullWidth\n          onClick={async () => {\n            setTab(2)\n          }}\n        >\n          ABOUT\n        </Button>\n        <Button\n          style={{\n            border: \"3px solid black\",\n            margin: 5\n          }}\n          fullWidth\n          onClick={async () => {\n            setTab(3)\n          }}\n        >\n          NFT FAUCET\n        </Button>\n\n        {//activeAccount && <div style={{ textAlign: \"right\", width: \"100%\", padding: 5 }}>{activeAccount.address}</div>\n        }\n\n        <Button\n          style={{\n            border: \"3px solid black\",\n            margin: 5\n          }}\n          fullWidth\n          onClick={async () => {\n            if (activeAccount) {\n              unsync()\n            } else {\n              sync()\n            }\n          }}\n        >\n          {activeAccount ? <div\n            style={{ textAlign: \"right\", width: \"100%\", padding: 5, fontSize: \"0.8em\" }}>{activeAccount.address} unsync</div> : \"sync\"}\n        </Button>\n      </div>\n\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n\n        <div style={{ width: \"70vw\", marginTop: 20 }}>\n\n          {\n            tab === 0 &&\n            <div>\n              <div>\n                <br></br>\n                {\n                  boxes && boxes.map((box, index) => (\n                    box.active &&\n                    <div key={box.key} style={{ border: \"4px black solid\", marginBlock: 10 }}>\n                      <div style={{ textAlign: \"center\" }}>\n                        <h2>Box #{box.key}</h2>\n                      </div>\n                      <div style={{ display: \"flex\", paddingBlock: 10, margin: 10, justifyContent: \"center\" }}>\n                        <div style={{ display: \"flex\", overflowY: \"auto\" }}>\n                          {\n                            box.value.tokens && box.value.tokens.map((token, index) => (\n                              token.amount > 0 &&\n                              <Button\n                                key={token.id} style={{ border: \"2px solid black\", minWidth: \"17.4vw\", maxWidth: \"17.4vw\", maxHeight: \"17.4vw\" }}>\n                                <div>\n                                  {token.metadata.displayUri && <img style={{ width: \"90%\", maxHeight: \"15.5vw\" }} alt={token.metadata.title} src={token.metadata.displayUri.replace('ipfs://', 'https://ipfs.io/ipfs/')}></img>}\n                                  <div style={{ textAlign: \"center\" }}>\n                                    {(token.metadata) && token.metadata.name.length > 30 ? token.metadata.name.slice(4, 27) + \"...\" : token.metadata.name}({token.amount})\n                                  </div>\n                                </div>\n                              </Button>\n\n                            ))\n                          }\n                        </div>\n                      </div>\n                      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                        <Button style={{ border: \"2px solid black\" }}\n                          onClick={async () => {\n                            setOpeningBox(true)\n                            const contract = await Tezos.wallet.at(contractAddress);\n                            try {\n                              const operation = await contract.methods.openBox(\n                                box.key\n                              ).send({ mutez: true, amount: box.value.price });\n\n                              const result = await operation.confirmation();\n                              const resultas = await contract.storage();\n                              console.log(result);\n                              console.log(resultas);\n\n\n                              var newBoxes = [...boxes];\n                              newBoxes.splice(index, 1);\n                              setBoxes(newBoxes)\n\n                              toast('Successfully opened the box !')\n                              setOpeningBox(false)\n\n                            } catch (error) {\n                              console.log(error)\n                              toast('failed to open box, check console for details')\n                              setOpeningBox(false)\n                            }\n                          }}\n                        >\n                          {openingBox ? <img alt={\"loading\"} src={loading} style={{ height: 24.5 }}></img> : <>open for {box.value.price / 1000000} xtz</>}\n                        </Button>\n                      </div>\n\n\n                      <br></br>\n                      <div style={{ textAlign: \"center\" }}>\n                        <b>seller: {box.value.owner}</b>\n                      </div>\n\n\n                    </div>\n\n                  ))\n                }\n              </div>\n            </div>\n          }\n\n          {\n            tab === 1 &&\n            <div>\n              <CreateBox\n                address={activeAccount && activeAccount.address}\n                createBox={createBox}\n              >\n\n              </CreateBox>\n            </div>\n          }\n          {\n            tab === 2 &&\n            <div>\n\n\n              Collectibles gain more value if they are sold as a set just like pokemon cards. Imagine a box containing all NFT’s your favorite artist released.\n              <br></br>\n              <br></br>\n              Another use for BoXTZ is that box creators can add their messages as an NFT, which is similar to author pre-signing books or putting souvenirs along with the main order as a gesture.\n              <br></br>\n              <br></br>\n              Artists can benefit from BoXTZ by making the collecting process easier and faster for collectors.\n              <br></br>\n              <br></br>\n              Overall BoXTZ aims to provide more options for both artists and collectors for trading their NFTs.\n\n              <br></br>\n              <br></br>\n              <br></br>\n              <b>backlog / roadmap:</b> <a href=\"https://whimsical.com/boxtz-GmWSy9iqjh5xhhD5dy8kxn@2Ux7TurymN7CSfRrhrF9\"> https://whimsical.com/boxtz-GmWSy9iqjh5xhhD5dy8kxn@2Ux7TurymN7CSfRrhrF9</a>\n              <br></br>\n              <b>Contract Address:</b> KT1Tmo6GTcPztKxGxCRP6ptdHVjgH6kL1pTj\n              <br></br>\n              <a href=\"https://better-call.dev/ghostnet/KT1Tmo6GTcPztKxGxCRP6ptdHVjgH6kL1pTj/operations\">https://better-call.dev/ghostnet/KT1Tmo6GTcPztKxGxCRP6ptdHVjgH6kL1pTj/operations</a>\n              <br></br>\n              <br></br>\n              <br></br>\n              <h2>How to Use</h2>\n\n              <br></br>\n              install temple wallet\n              <br></br>\n              get testnet tezos <a href=\" https://faucet.ghostnet.teztnets.xyz/\"> https://faucet.ghostnet.teztnets.xyz/</a>\n              <br></br>\n              mint testnet nfts from top \"NFT FAUCET\" tab\n              <br></br>\n              now ready to create a Box ! with \"CREATE BOX tab\"\n              <br></br>\n              select nfts you want to sell andd enter the price you want then create !\n              <br></br>\n              use explore tab to open boxes !\n            </div>\n          }\n          {\n            tab === 3 &&\n            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n              <Button style={{ border: \"2px solid black\" }}\n                onClick={async () => {\n                  const contract = await Tezos.wallet.at(\"KT1Pn5P6oiVBsZS2xZcq9aLr9wbymhw7WHtz\");\n                  try {\n                    const operation = await contract.methods.mint_ZONK(\n                      activeAccount.address,\n                      10,\n                      \"697066733a2f2f516d4e54336951464479377a4c71747a4a6a383668743574546639535879316d3833466f577357795932666a7937\",\n                      100\n                    ).send({ mutez: true, amount: 0 });\n\n                    const result = await operation.confirmation();\n                    const resultas = await contract.storage();\n                    console.log(result);\n                    console.log(resultas);\n\n\n                  } catch (error) {\n                    console.log(error)\n                  }\n                }}\n              >\n                <div>\n                  <img src={\"https://ipfs.io/ipfs/QmQ3mdCLzoQ1pVEFD1RvyvisDcPWj5CStzrFNAHmUs2c6E\"} alt={\"LUZI HAIKU\"} style={{ width: \"20vw\" }}></img>\n                  <br></br>\n                  mint LUZI HAIKU x 10\n                </div>\n              </Button>\n              <Button style={{ border: \"2px solid black\" }}\n                onClick={async () => {\n                  const contract = await Tezos.wallet.at(\"KT1Pn5P6oiVBsZS2xZcq9aLr9wbymhw7WHtz\");\n                  try {\n                    const operation = await contract.methods.mint_ZONK(\n                      activeAccount.address,\n                      10,\n                      \"697066733a2f2f516d4e54336951464479377a4c71747a4a6a383668743574546639535879316d3833466f577357795932666a7937\",\n                      100\n                    ).send({ mutez: true, amount: 0 });\n\n                    const result = await operation.confirmation();\n                    const resultas = await contract.storage();\n                    console.log(result);\n                    console.log(resultas);\n\n\n                  } catch (error) {\n                    console.log(error)\n                  }\n                }}\n              >\n                <div>\n                  <img src={\"https://ipfs.io/ipfs/QmdhMjXu7Q7AHguiwPDyqhwPWvsRWVtYVFCK5WwqRrRLer\"} alt={\"Doll House\"} style={{ width: \"20vw\" }}></img>\n                  <br></br>\n                  mint Doll House x 10\n                </div>\n              </Button>\n            </div>\n          }\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}